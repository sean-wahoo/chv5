{
	"info": {
		"_postman_id": "fbbaf21b-81f5-4930-ad3a-d9ff27ebdfed",
		"name": "chv5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "setup",
					"item": [
						{
							"name": "addTestUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Returns json body for successful registration\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"User successfully signed up!\");\r",
											"    pm.expect(jsonData).to.have.property(\"user\");\r",
											"    pm.expect(jsonData).to.have.property(\"token\");\r",
											"\r",
											"    pm.collectionVariables.set(\"token_pre\", jsonData.token);\r",
											"    pm.collectionVariables.set(\"delete_user_id_pre\", jsonData.user.user_id);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \"type\": \"email\", \"email\": \"test@email.com\" }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/auth/signUp",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"auth",
										"signUp"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "signUp",
					"item": [
						{
							"name": "failing",
							"item": [
								{
									"name": "emptyRequest",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Returns error for empty request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Empty Request!\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/auth/signUp",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"auth",
												"signUp"
											]
										}
									},
									"response": []
								},
								{
									"name": "noEmail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Returns error for no email\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Email not provided!\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{ \"type\": \"email\" }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/auth/signUp",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"auth",
												"signUp"
											]
										}
									},
									"response": []
								},
								{
									"name": "emailAlreadyExists",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Returns error for email already in use\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"User with that email already exists!\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{ \"type\": \"email\", \"email\": \"test@email.com\" }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/auth/signUp",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"auth",
												"signUp"
											]
										}
									},
									"response": []
								},
								{
									"name": "emailWrongFormat",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Returns error for email in wrong format\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Email is the wrong format!\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{ \"type\": \"email\", \"email\": \"testemail.com\" }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/auth/signUp",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"auth",
												"signUp"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "succeeding",
							"item": [
								{
									"name": "signUp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Returns json body for successful registration\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"User successfully signed up!\");\r",
													"    pm.expect(jsonData).to.have.property(\"user\");\r",
													"    pm.expect(jsonData).to.have.property(\"token\");\r",
													"\r",
													"    pm.collectionVariables.set(\"token\", jsonData.token);\r",
													"    pm.collectionVariables.set(\"delete_user_id\", jsonData.user.user_id);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"type\": \"email\",\r\n    \"email\": \"test2@email.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/auth/signUp",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"auth",
												"signUp"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "clean",
							"item": [
								{
									"name": "deleteUser",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Returns json body for successful user deletion\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"message\");\r",
													"    pm.expect(jsonData.message).to.eql(`Successfully deleted user with id ${pm.collectionVariables.get('delete_user_id')}`);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}} ",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/auth/deleteUser?user_id={{delete_user_id}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"auth",
												"deleteUser"
											],
											"query": [
												{
													"key": "user_id",
													"value": "{{delete_user_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "deleteTestUser",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Returns json body for successful user deletion\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"message\");\r",
													"    pm.expect(jsonData.message).to.eql(`Successfully deleted user with id ${pm.collectionVariables.get('delete_user_id_pre')}`);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}} ",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:5000/auth/deleteUser?user_id={{delete_user_id_pre}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"auth",
												"deleteUser"
											],
											"query": [
												{
													"key": "user_id",
													"value": "{{delete_user_id_pre}}"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "\"\""
		},
		{
			"key": "delete_user_id_pre\n",
			"value": "\"\""
		},
		{
			"key": "delete_user_id",
			"value": "\"\""
		},
		{
			"key": "token_pre",
			"value": "\"\""
		},
		{
			"key": "delete_user_id_pre",
			"value": ""
		}
	]
}